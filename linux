https://courses.edx.org/courses/course-v1:LinuxFoundationX+LFS101x+1T2017/course/

Chapter 01: The Linux Foundation

* https://www.linuxfoundation.org

* Distro Families
** Debian Family Systems - Individual Distros (such as Ubuntu > Linux)
** SUSE Family Systems - Individual Distros (such as SLES >  openSUSE)
** Fedora Family Systems - Individual Distros (such as RHEL > CentOS, Oracle Linux)

Chapter 02: Linux Philosophy and Concepts  

* Linus Torvalds
* Linux borrows heavily from the UNIX operating system because it was written to be a free and open source version of UNIX. 
Files are stored in a hierarchical filesystem with the top node of the system being root directory or simple "/".

* askubuntu.com

* Kernel
** glue between hardware and applications
** considered the brain of the Linux Operating System
** controls the hardware and makes the hardware interact with the applications
** Linux kernel
** kernel.org

* Distribution
** collection of software making up a Linux-based OS
** Distros
** collections of programs combined with Linux kernel to make up a Linux-based operating system
** Red Hat Enterprise Linux, Fedora, Ubuntu, Gentoo

* Bootloader
** program that boots the operating system
** GRUB, ISOLINUX

* Service
** program that runs as background process
** httpd (webserver), ftpd (ftp server), named (name server), dhcpd (dhcp server)

* Filesystem
** method for storing and organizing files in Linux
** ext3, ext4, FAT, XFS and Btrfs

* Window System
** provides the standard toolkit and protocol to build graphical user interfaces on nearly all Linux systems
** GUI - Desktop Environment - graphical user interface on top of the operating system
*** KDE, GNOME, XFCE
** Console - Command Line - interface for typing commands on top of the operating system
*** CLI/Shell

* Shell
** command line interpreter that interprets the command line input and instructs the operating system to perform any necessary tasks and commands.

* Linux Support Services
** Commercial Support and Services - Oracle, RHEL, SLES, Ubuntu Commercial Support
** Community Support and Services - CentOS, OpenSUSE, Ubuntu Community  Support

Chapter 03 Linux Basics and System Startup

The Boot Process - procedure for initializing system
>> Power  On 
>> BIOS - The First Step 
*** Basic Input/Output System initializes the hardware, including the screen and the keyboard, and tests the memory. 
*** This process is also called POST (Power On Self Test)
>> MBR - Master Boot Record
*** Once the POST is completed, the system control passes from the BIOS to the bootloader.
*** Bootloader is usually stored on one of the hard disks in the systems, either in the boot sector (for traditional BIOS/MBR systems) or the EFI partition (for more recent (Unified) Extensible Firmware Interface or EFI/UEFI systems)
*** Up to this stage, the machine does not access any mass storage media. Therefore, information on the date, time and the most important peripherals are loaded from the CMOS values
*** Bootloaders include:
**** GRUB Grand  Unified Boot Loader
**** ISOLINUX booting from removable media 
**** DAS U-BOOT booting on embedded devices/appliances
*** When booting Linux, the bootloader is responsible for loading the kernel image and the initial RAM disk or filesystem (which contains some critical files and device drivers needed to start the system) into memory
>> Bootloader in Action
*** Bootloader > Kernel Linux , > Initial RAM Disk (initramfs image)
** First Stage
*** BIOS/MBR method, bootloader resides at the first sector of the hard disk


Chapter 09 Processes

* A process is simply an instance of one or more related tasks (threads) executing on your computer. 
** Interactive Processes - Need to be started by a user, either at a command line or through a graphical interface. > bash, firefox, top
** Batch Processes - Automatic processes which are scheduled from and then disconnected from the terminal. > updatedb
** Daemons - Server processes that run continuously. > httpd, xinetd, sshd
** Threads - Lightweight processes. These are tasks that run under the umbrella of a main process, sharing memory and other resources, but are scheduled and run by the system on an individual basis. > firefox, gnome-terminal-server
** Kernel Threads - Kernel tasks that users neither start nor terminate and have little control over. > kthreadd, migration, ksoftirqd

* Process ID (PID)
* Parent Process ID (PPID)
* Thread ID (TID)

> kill -SIGKILL <pid>
> kill -9 <pid>

* User ids 
> RUID - Identifies the user who started the process
> EUID - Determines the access rights of the user
* User Group ids
> RGID - Identifies the group that started the process
> EGID - Determines the access rights of the group

* Higher priority processes are granted more time on the CPU.
* The lower the nice value, the higher the priority. 
** Low values are assigned to important processes, while high values are assigned to processes that can wait longer. 
** In Linux, a nice value of -20 represents the highest priority and 19 represents the lowest. 

* Load average is the average of the load number for a given period of time. It determines how busy the system is.

* To load average 
> w
> top
> uptime
** load average: 0.45 <last minute>, 0.39 <last 5minute>, 0.34 <last 25minute>

* Foreground jobs run directly from the shell, and when one foreground job is running, other jobs need to wait for shell access (at least in that terminal window if using the GUI) until it is completed.
* You can run the job in the background and free the shell for other tasks.
** By default, all jobs are executed in the foreground.

> updatedb &
* You can put a job in the background by suffixing & to the command

> suspend a foreground job: ctrl-z 
> terminate a foreground job: ctrl-c
> run a process in the background and foreground: bg and fg

> jobs 
> jobs -l
* displays all jobs running in background; enumerate the background processes running in the current terminal session

> uptime
> top | head
> w

> gedit somefile
^Z
> jobs -l
> bg
> fg
^Z
> kill -9 2345

* ps provides information about currently running processes keyed by PID
** by default, ps will display all processes running under the current shell
** ps -u <username> > option to display information of processes for a specified username
** ps -ef > displays all the processes in the system in full detail
** ps -eLf > displays one line of information for every thread; view the current processes along with the list of threads
** ps aux | head -10 > displays all processes of all users
** ps axo pid,command,comm | head -10 > allows you to specify which attributes you want to view

* pstree displays the processes running on the system in the form of a tree diagram showing the relationship between a process and its parent process and any other processes that it created. 
** threads are displayed in curly brace

> top to get constant real-time updates (every two seconds by default), until you exit by typing q. 
** The first line of the top output displays a quick summary of what is happening in the system, including :
*** how long the system has been up; how many users are logged on; what is the load average
** The second line of the top output displays :
*** the total number of processes, the number of running, sleeping, stopped, and zombie processes. 
** The third line of the top output indicates how the CPU time is being divided :
*** between the users (us) and the kernel (sy) by displaying the percentage of CPU time used for each
*** niceness - ni
*** idle mode - id
*** wa - percentage of jobs waiting for I/O
*** hi - percentage of hardware interrupts
*** si - software interrupts
*** st - steal time
** The fourth line of the top output indicate memory usage: physical memory (RAM)
** The fifth line of the top output indicate memory usage: Swap space
*** Once the physical memory is exhausted, the system starts using swap space (temporary storage space on the hard drive) as an extended memory pool.
** Each line in the process list of the top output displays information about a process.
** By default, processes are ordered by highest CPU usage. 

> top
t	Display or hide summary information (rows 2 and 3)
m	Display or hide memory information (rows 4 and 5)
A	Sort the process list by top resource consumers
r	Renice (change the priority of) a specific processes
k	Kill a specific process
f	Enter the top configuration screen
o	Interactively select a new sort order in the process list

** Starting Processes in the future ** 



